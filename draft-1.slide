Welcome to Go

Patrick Oyarzun

* About me

- Gopher since 2012
- Really bad at cross words

* Agenda

- Why does Go exist?
- What makes it special?
- Demo project

* Why Go?

- Building distributed systems is hard
- C++ is unsafe, complex, and ill-suited to modern, highly parallel jobs
- People are bad at getting it right
- Go focuses on scalability of machines and people

* Go

- Compiled to machine code
- Statically typed
- Garbage collected
- Multi-paradigm
- Simple philosophy
- Useful by default

* Hello World

.play ./example/hello_world.go

* Lightweight, consistent syntax

This is Go:
.code ./people-scaling/prime-good.go /START/,/END/
This is not:
.code ./people-scaling/prime-bad.go /START/,/END/

* Simple type system

.code people-scaling/types.go /START/,/END/

* Concurrency

.play ./concurrency/main.go

* Concurrency

.play ./concurrency-2/main.go

* Concurrency

.play ./concurrency-3/main.go

* Concurrency

.play ./concurrency-4/main.go /func main/,/done/

* Tools

go build
go run
go test
go vet
go fmt
golint
go tool pprof

* Compatibility Promise

.link https://golang.org/doc/go1compat Go 1 and the Future of Go Programs

    [...] It is intended that programs written to the Go 1 specification 
    will continue to compile and run correctly, unchanged, over the 
    lifetime of that specification. [...]

Since release on 28 March 2012, there have been *three* breaking changes to
the language. All indicated buggy / incorrect programs before the change.


# * 6 years of breaking changes
#
# 1.0 - Language declared stable
# 1.1 - Everything still works
# 1.2 - 1 breaking change for memory unsafe programs
# 1.3 - 1 breaking change for memory unsafe programs
# 1.4 - 1 breaking change to fix a compiler bug
# 1.5 - Everything still works (Compiler is now written in Go!)
# 1.6 - Everything still works
# 1.7 - Everything still works
# 1.8 - Everything still works
# 1.9 - Everything still works
# 1.10 - Everything still works

* Demo project

: Show the site, what it does.
: Show core domain 'zero overhead abstractions'
: Smarty concurrency 'simple enough for me to make it correct'
: cpu pprof results for speedy
: use suggestions system to show improvements in the algorithm over time
: show main.go
: show endpoints.go RenderBoard is simple

.link https://word-bot.pcfbeta.io

* More Reading

.link https://go-proverbs.github.io/ https://go-proverbs.github.io/ - Go Proverbs
.link https://golang.org/doc/effective_go.html https://golang.org/doc/effective_go.html - Effective Go
.link https://golang.org/doc/go1compat https://golang.org/doc/go1compat - Go 1 Compatibility

